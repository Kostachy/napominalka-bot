"""rework

Revision ID: 0bf517cb4cdd
Revises: d582393732fa
Create Date: 2023-09-10 11:32:23.865608

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '0bf517cb4cdd'
down_revision: Union[str, None] = 'd582393732fa'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('scheduledate',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('sch_datetime', sa.DateTime(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.drop_table('scheduling_time')
    op.drop_table('scheduling_date')
    op.drop_constraint('user_user_id_key', 'user', type_='unique')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_unique_constraint('user_user_id_key', 'user', ['user_id'])
    op.create_table('scheduling_date',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('scheduling_date_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('schedule_date', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.user_id'], name='scheduling_date_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='scheduling_date_pkey'),
    sa.UniqueConstraint('schedule_date', name='scheduling_date_schedule_date_key'),
    postgresql_ignore_search_path=False
    )
    op.create_table('scheduling_time',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('schedule_time', postgresql.TIME(), autoincrement=False, nullable=True),
    sa.Column('schedule_date', sa.DATE(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['schedule_date'], ['scheduling_date.schedule_date'], name='scheduling_time_schedule_date_fkey'),
    sa.PrimaryKeyConstraint('id', name='scheduling_time_pkey')
    )
    op.drop_table('scheduledate')
    # ### end Alembic commands ###
